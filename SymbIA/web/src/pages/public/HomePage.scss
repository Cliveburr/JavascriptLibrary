@use '../../styles/_variables' as *;

/* Test CSS hot reload working! */

.home-page {
    min-height: 100vh;

    &__hero {
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 80vh;
        padding: $spacing-3xl 0;
        position: relative;
        overflow: hidden;

        // Background effects
        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background:
                radial-gradient(circle at 20% 30%, rgba($color-primary, 0.1) 0%, transparent 60%),
                radial-gradient(circle at 80% 70%, rgba($color-accent, 0.08) 0%, transparent 60%);
            z-index: -1;
        }

        @media (max-width: $breakpoint-lg) {
            flex-direction: column;
            text-align: center;
            gap: $spacing-2xl;
        }
    }

    &__features {
        padding: $spacing-3xl 0;
        background: linear-gradient(180deg,
                transparent 0%,
                rgba($color-bg-secondary, 0.3) 50%,
                transparent 100%);
    }

    &__cta {
        padding: $spacing-3xl 0;
    }
}

.hero-content {
    flex: 1;
    max-width: 600px;

    .hero-title {
        font-size: $font-size-4xl;
        font-weight: $font-weight-bold;
        margin-bottom: $spacing-md;
        line-height: 1.1;

        @media (max-width: $breakpoint-md) {
            font-size: $font-size-3xl;
        }
    }

    .hero-subtitle {
        font-size: $font-size-xl;
        color: $color-text-secondary;
        margin-bottom: $spacing-lg;
        font-weight: $font-weight-medium;
    }

    .hero-description {
        font-size: $font-size-lg;
        color: $color-text-secondary;
        line-height: $line-height-relaxed;
        margin-bottom: $spacing-2xl;
    }

    .hero-actions {
        display: flex;
        gap: $spacing-md;

        @media (max-width: $breakpoint-sm) {
            flex-direction: column;
            align-items: center;
        }
    }
}

.hero-visual {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    max-width: 500px;
    height: 400px;
    position: relative;

    @media (max-width: $breakpoint-lg) {
        order: -1;
        height: 300px;
    }
}

.neural-network {
    position: relative;
    width: 100%;
    height: 100%;

    .neural-node {
        position: absolute;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: $gradient-primary;
        box-shadow: $glow-primary;
        animation: pulse 3s infinite;

        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            background: $color-bg-primary;
            border-radius: 50%;
        }

        &--1 {
            top: 20%;
            left: 20%;
            animation-delay: 0s;
        }

        &--2 {
            top: 10%;
            right: 20%;
            animation-delay: 0.5s;
        }

        &--3 {
            bottom: 30%;
            left: 10%;
            animation-delay: 1s;
        }

        &--4 {
            bottom: 20%;
            right: 30%;
            animation-delay: 1.5s;
        }

        &--5 {
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            animation-delay: 2s;
            background: $gradient-accent;
            box-shadow: $glow-accent;
        }
    }

    .neural-connection {
        position: absolute;
        height: 2px;
        background: linear-gradient(90deg, transparent, $color-primary, transparent);
        animation: connectionPulse 4s infinite;
        transform-origin: left center;

        &--1 {
            top: 35%;
            left: 30%;
            width: 25%;
            transform: rotate(45deg);
            animation-delay: 0.5s;
        }

        &--2 {
            top: 25%;
            right: 35%;
            width: 30%;
            transform: rotate(-30deg);
            animation-delay: 1s;
        }

        &--3 {
            bottom: 35%;
            left: 25%;
            width: 35%;
            transform: rotate(-45deg);
            animation-delay: 1.5s;
        }
    }
}

.features-title {
    text-align: center;
    font-size: $font-size-3xl;
    margin-bottom: $spacing-2xl;
    background: $gradient-primary;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: $spacing-xl;
    margin-bottom: $spacing-2xl;

    @media (max-width: $breakpoint-sm) {
        grid-template-columns: 1fr;
        gap: $spacing-lg;
    }
}

.feature-card {
    text-align: center;
    transition: transform $transition-normal;

    &:hover {
        transform: translateY(-8px);
    }

    .feature-icon {
        font-size: 3rem;
        margin-bottom: $spacing-md;
        display: block;
    }

    h3 {
        color: $color-text-primary;
        margin-bottom: $spacing-sm;
        font-size: $font-size-xl;
    }

    p {
        color: $color-text-secondary;
        line-height: $line-height-relaxed;
        margin-bottom: 0;
    }
}

.cta-card {
    text-align: center;

    .cta-content {
        h2 {
            font-size: $font-size-2xl;
            margin-bottom: $spacing-md;
            background: $gradient-accent;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        p {
            font-size: $font-size-lg;
            color: $color-text-secondary;
            margin-bottom: $spacing-xl;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }
    }
}

// Animations
@keyframes connectionPulse {

    0%,
    100% {
        opacity: 0.3;
        background: linear-gradient(90deg, transparent, rgba($color-primary, 0.3), transparent);
    }

    50% {
        opacity: 1;
        background: linear-gradient(90deg, transparent, $color-primary, transparent);
    }
}